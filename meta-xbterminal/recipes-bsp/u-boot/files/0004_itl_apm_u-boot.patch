diff --git a/board/innovativetechnology/mx6ul_itl_apm/mx6ul_itl_apm.c b/board/innovativetechnology/mx6ul_itl_apm/mx6ul_itl_apm.c
index 0fdac61..dc5c1b8 100644
--- a/board/innovativetechnology/mx6ul_itl_apm/mx6ul_itl_apm.c
+++ b/board/innovativetechnology/mx6ul_itl_apm/mx6ul_itl_apm.c
@@ -79,6 +79,12 @@ static iomux_v3_cfg_t const iox_pads[] = {
 
 #define PCF8754A_I2C	0x38
 
+#define LCD_BL_PWM IMX_GPIO_NR(1, 9)
+
+char revMajor = 0;
+char revMinor = 0;
+char revOpt = 0;
+
 enum
 {
 	PCF8754A_LED,
@@ -87,7 +93,7 @@ enum
 	PCF8754A_LCD_BL_EN,
 	PCF8754A_LCD_DISP_ON,
 	PCF8754A_SD1_OC,
-	PCF8754A_NC,
+	PCF8754A_BT_RST,
 	PCF8754A_ENET1_RST
 };
 
@@ -145,10 +151,10 @@ int power_init_board(void)
 	/* SW1B standby voltage set to 0.975V */
 	reg = 0xb;
 	pmic_reg_write(pfuze, PFUZE3000_SW1BSTBY, reg);
-	
+
 	reg = 0x1a;
-	pmic_reg_write(pfuze, PFUZE3000_VLDO3CTL, reg);	
-	
+	pmic_reg_write(pfuze, PFUZE3000_VLDO3CTL, reg);
+
 	reg = 0x1a;
 	pmic_reg_write(pfuze, PFUZE3000_VLD4CTL, reg);
 
@@ -314,8 +320,6 @@ int board_mmc_getcd(struct mmc *mmc)
 
 int board_mmc_init(bd_t *bis)
 {
-	printf("board_mmc_init");
-		
 #ifdef CONFIG_SPL_BUILD
 	imx_iomux_v3_setup_multiple_pads(usdhc1_pads, ARRAY_SIZE(usdhc1_pads));
 	gpio_direction_input(USDHC1_CD_GPIO);
@@ -510,34 +514,46 @@ int board_phy_config(struct phy_device *phydev)
 static void pcf8754_init(void)
 {
 /* Setup the GPIO expander */
-	if (gpio_exp_setup_port(1, 1, PCF8754A_I2C) == 0)
+	if (gpio_exp_setup_port(1, 0, PCF8754A_I2C) == 0)
 	{
 		uint8_t gpio_exp;
 		/* Turn on the LED */
 		gpio_exp = gpio_exp_direction_output(PCF8754A_LED, 0);
-		
+
 		/* Clear STM32 Reset */
 		gpio_exp = gpio_exp_direction_output(PCF8754A_STM32_BSL, 0);
 		gpio_exp = gpio_exp_direction_output(PCF8754A_STM32_RST, 0);
 		udelay(50000);
 		gpio_exp = gpio_exp_direction_output(PCF8754A_STM32_RST, 1);
-		
-		/* Turn on the Display and Backlight */
-		gpio_exp = gpio_exp_direction_output(PCF8754A_LCD_DISP_ON, 1);
-		gpio_exp = gpio_exp_direction_output(PCF8754A_LCD_BL_EN, 1);
-		
-		
+
+		/* Turn on the Display */
+                gpio_exp = gpio_exp_direction_output(PCF8754A_LCD_DISP_ON, 1);
+
+		if((revMajor == 1) && (revMinor >= 'C'))
+		{
+			gpio_exp = gpio_exp_direction_output(PCF8754A_BT_RST, 0);
+			udelay(10000);
+			gpio_exp = gpio_exp_direction_output(PCF8754A_BT_RST, 1);
+		}
+		else
+		{
+			/* Turn on the Backlight */
+			gpio_exp = gpio_exp_direction_output(PCF8754A_LCD_BL_EN, 1);
+		}
+
 		if (gpio_exp != 0)
 		{
 			gpio_exp = gpio_exp_direction_output(PCF8754A_LED, 1);
 		}
 	}
 }
-	
+
 int board_early_init_f(void)
 {
 	setup_iomux_uart();
 
+	// gpio_direction_output(LCD_BL_PWM, 1);
+
 	return 0;
 }
 
@@ -587,9 +603,40 @@ int board_late_init(void)
 #endif
 
 #ifdef CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
-	setenv("board_name", "ITL APM");
+	char *pointer = 0x021bc660;
+
+	int productID = pointer[0] << 8 | pointer[1];
+	productID >> 4;
+
+	int serialNum = (pointer[1] & 0x0f) << 16 | pointer[2] | pointer[3];
+
+	if (productID == 0x410)
+	{
+		setenv("board_name", "ITL APM");
+
+		char *pointer = 0x021bc670;
+
+		char revMajor = pointer[1];
+		unsigned int tmpReg = pointer[2] << 8 | pointer[3];
+		// Count the bits
+		int i = 0;
+		char revMinor = 'A';
+		do
+		{
+			if((revMinor >> i) & 1)
+			{
+				revMinor++;
+				i++;
+			}
+			else
+				continue;
+		}
+		while(i<16);
+	}
+	char revOpt = pointer[0];
 
-	setenv("board_rev", "1.1");
+	sprintf(revStr,"%d.%c",revMajor);
+	setenv("board_rev", revStr);
 #endif
 
 	return 0;
@@ -597,7 +644,43 @@ int board_late_init(void)
 
 int checkboard(void)
 {
-	puts("Board: MX6UL 1.1 ITL APM\n");
+	char idString[64];
+	char *pointer1 = (char *) 0x021bc660;
+
+	int productID = pointer1[3] << 4 | (pointer1[2] && 0xf0) >> 4;
+	int serialNum = ((pointer1[2] && 0x0f) << 16) | (pointer1[1] << 8) | pointer1[0];
+
+	if (productID == 0x410)
+	{
+		char *pointer2 = (char *) 0x021bc670;
+
+		revMajor = pointer2[2];
+		revMinor = 'A';
+
+		unsigned int tmpReg = pointer2[1] << 8 | pointer2[0];
+		// Count the bits
+		int i = 0;
+		do
+		{
+			if((tmpReg >> i) && 1 == 1)
+			{
+				revMinor++;
+			}
+
+			i++;
+		}
+		while(i<16);
+
+		revOpt = pointer2[3];
+
+		sprintf(idString,"Board: ITL APM Rev %d.%c (%x)\n", revMajor, revMinor, revOpt);
+	}
+	else
+	{
+		sprintf(idString,"Board: Unconfigured %x %x %x %x\n", serialNum, revMajor, revMinor, revOpt);
+	}
+
+	puts(idString);
 
 	return 0;
 }
