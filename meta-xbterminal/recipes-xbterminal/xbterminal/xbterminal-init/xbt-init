#!/bin/sh

# Usage: xbt-init [batch_number]

set -e
set -x

if [[ ! -e /srv/xbterminal/xbterminal/runtime/batch_number ]]
then
    if [[ "$XBT_INIT_PRODUCTION_MODE" = true ]]
    then
        # Started as systemd service (core-image-xbt image)
        BATCH_NUMBER=$(wget https://xbterminal.io/api/v2/batches/current/ -q -O -)
    else
        # Manual execution (core-image-xbt-dev image)
        BATCH_NUMBER=${1:-"00000000000000000000000000000000"}
    fi

    # Write batch number
    echo $BATCH_NUMBER > /srv/xbterminal/xbterminal/runtime/batch_number
    echo "Batch number ${BATCH_NUMBER}"

    # Generate device key and write minion id
    DEVICE_KEY=`cat /etc/machine-id | sha256sum | cut -d " " -f 1`
    echo $DEVICE_KEY > /srv/xbterminal/xbterminal/runtime/device_key
    echo $DEVICE_KEY > /etc/salt/minion_id
    echo "New device key ${DEVICE_KEY}"

    if [[ "$BATCH_NUMBER" = "00000000000000000000000000000000" ]]
    then
        # Use stage server, enable debug mode
        echo -e "{\n    \"remote_server\": \"stage\"\n}" > /srv/xbterminal/xbterminal/runtime/rpc_config
        echo -e "{\n    \"debug\": true\n}" > /srv/xbterminal/xbterminal/runtime/gui_config
        echo "environment: stage" > /etc/salt/minion.d/env.conf
        rm /etc/salt/minion.d/master.conf
        echo "master: stage-sam.xbthq.co.uk" >> /etc/salt/minion.d/master.conf
        echo "master_finger: 5e:71:6b:f2:8a:38:0a:6e:2b:b7:06:26:54:51:1b:9c" >> /etc/salt/minion.d/master.conf
        echo "transport: tcp" >> /etc/salt/minion.d/master.conf
    fi

    #initiate hosts file
    echo "127.0.0.1	localhost.localdomain		localhost" > /etc/hosts
    #set hostname
    echo "127.0.1.1 ${DEVICE_KEY}.int   ${DEVICE_KEY}" >> /etc/hosts
    /usr/bin/hostnamectl set-hostname "${DEVICE_KEY}.int"

    # Restart Syslog-ng, journald
    systemctl restart syslog-ng.service
    systemctl restart systemd-journald.service

    # Restart salt-minion
    systemctl restart salt-minion

    # Run touchscreen calibrator if present
    if [[ -e /usr/bin/xinput_calibrator_once.sh ]]
    then
        echo "Starting touchscreen calibrator..."
        xinit xinput_calibrator_once.sh &> /dev/null
        echo "Touchscreen calibration done"
    fi

    echo "Device successfully initialized"
else
    echo "Device already initialized, exiting"
fi
